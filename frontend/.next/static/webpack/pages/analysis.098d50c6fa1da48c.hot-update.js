"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/analysis",{

/***/ "./src/types/quotes.ts":
/*!*****************************!*\
  !*** ./src/types/quotes.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MARKET_QUOTES\": function() { return /* binding */ MARKET_QUOTES; },\n/* harmony export */   \"formatPremium\": function() { return /* binding */ formatPremium; },\n/* harmony export */   \"getAvailableStrikes\": function() { return /* binding */ getAvailableStrikes; },\n/* harmony export */   \"getAvailableTerms\": function() { return /* binding */ getAvailableTerms; },\n/* harmony export */   \"getInstrumentPremium\": function() { return /* binding */ getInstrumentPremium; }\n/* harmony export */ });\n/**\n * Types for market quotes and pricing data\n */ // Market data from indicative quotes\nvar MARKET_QUOTES = {\n    CAP: {\n        \"16\": {\n            \"1\": 0.0112,\n            \"2\": 0.0138,\n            \"3\": 0.0170,\n            \"4\": 0.0200,\n            \"5\": 0.0230,\n            \"6\": 0.0254,\n            \"7\": 0.0276,\n            \"8\": 0.0295,\n            \"9\": 0.0311,\n            \"10\": 0.0326\n        },\n        \"17\": {\n            \"1\": 0.0076,\n            \"2\": 0.0042,\n            \"3\": 0.0144,\n            \"4\": 0.0176,\n            \"5\": 0.0205,\n            \"6\": 0.0231,\n            \"7\": 0.0253,\n            \"8\": 0.0272,\n            \"9\": 0.0289,\n            \"10\": 0.0304\n        },\n        \"18\": {\n            \"1\": 0.0049,\n            \"2\": 0.0088,\n            \"3\": 0.0123,\n            \"4\": 0.0155,\n            \"5\": 0.0185,\n            \"6\": 0.0211,\n            \"7\": 0.0233,\n            \"8\": 0.0253,\n            \"9\": 0.0270,\n            \"10\": 0.0286\n        },\n        \"19\": {\n            \"1\": 0.0034,\n            \"2\": 0.0073,\n            \"3\": 0.0108,\n            \"4\": 0.0140,\n            \"5\": 0.0170,\n            \"6\": 0.0195,\n            \"7\": 0.0218,\n            \"8\": 0.0238,\n            \"9\": 0.0255,\n            \"10\": 0.0271\n        },\n        \"20\": {\n            \"1\": 0.0025,\n            \"2\": 0.0062,\n            \"3\": 0.0096,\n            \"4\": 0.0128,\n            \"5\": 0.0157,\n            \"6\": 0.0183,\n            \"7\": 0.0205,\n            \"8\": 0.0225,\n            \"9\": 0.0242,\n            \"10\": 0.0258\n        }\n    },\n    FLOOR_SELL: {\n        \"16\": {\n            \"1\": 0.0187,\n            \"2\": 0.0310,\n            \"3\": 0.0353,\n            \"4\": 0.0371,\n            \"5\": 0.0383,\n            \"6\": 0.0391,\n            \"7\": 0.0398,\n            \"8\": 0.0403,\n            \"9\": 0.0408,\n            \"10\": 0.0413\n        },\n        \"17\": {\n            \"1\": 0.0276,\n            \"2\": 0.0389,\n            \"3\": 0.0434,\n            \"4\": 0.0451,\n            \"5\": 0.0460,\n            \"6\": 0.0467,\n            \"7\": 0.0474,\n            \"8\": 0.0478,\n            \"9\": 0.0483,\n            \"10\": 0.0487\n        },\n        \"18\": {\n            \"1\": 0.0340,\n            \"2\": 0.0475,\n            \"3\": 0.0520,\n            \"4\": 0.0535,\n            \"5\": 0.0542,\n            \"6\": 0.0549,\n            \"7\": 0.0555,\n            \"8\": 0.0559,\n            \"9\": 0.0563,\n            \"10\": 0.0567\n        },\n        \"19\": {\n            \"1\": 0.0434,\n            \"2\": 0.0569,\n            \"3\": 0.0613,\n            \"4\": 0.0625,\n            \"5\": 0.0630,\n            \"6\": 0.0636,\n            \"7\": 0.0641,\n            \"8\": 0.0645,\n            \"9\": 0.0648,\n            \"10\": 0.0652\n        },\n        \"20\": {\n            \"1\": 0.0531,\n            \"2\": 0.0665,\n            \"3\": 0.0708,\n            \"4\": 0.0718,\n            \"5\": 0.0724,\n            \"6\": 0.0726,\n            \"7\": 0.0731,\n            \"8\": 0.0733,\n            \"9\": 0.0737,\n            \"10\": 0.0740\n        }\n    },\n    FLOOR_BUY: {\n        \"14\": {\n            \"1\": 0.0155,\n            \"2\": 0.0284,\n            \"3\": 0.0340,\n            \"4\": 0.0370,\n            \"5\": 0.0395,\n            \"6\": 0.0415,\n            \"7\": 0.0434,\n            \"8\": 0.0449,\n            \"9\": 0.0464,\n            \"10\": 0.0476\n        },\n        \"15\": {\n            \"1\": 0.0205,\n            \"2\": 0.0346,\n            \"3\": 0.0407,\n            \"4\": 0.0438,\n            \"5\": 0.0466,\n            \"6\": 0.0487,\n            \"7\": 0.0507,\n            \"8\": 0.0523,\n            \"9\": 0.0538,\n            \"10\": 0.0552\n        },\n        \"16\": {\n            \"1\": 0.0263,\n            \"2\": 0.0414,\n            \"3\": 0.0478,\n            \"4\": 0.0510,\n            \"5\": 0.0540,\n            \"6\": 0.0562,\n            \"7\": 0.0583,\n            \"8\": 0.0600,\n            \"9\": 0.0616,\n            \"10\": 0.0630\n        },\n        \"17\": {\n            \"1\": 0.0328,\n            \"2\": 0.0486,\n            \"3\": 0.0553,\n            \"4\": 0.0587,\n            \"5\": 0.0617,\n            \"6\": 0.0641,\n            \"7\": 0.0662,\n            \"8\": 0.0680,\n            \"9\": 0.0696,\n            \"10\": 0.0711\n        },\n        \"18\": {\n            \"1\": 0.0401,\n            \"2\": 0.0565,\n            \"3\": 0.0632,\n            \"4\": 0.0667,\n            \"5\": 0.0698,\n            \"6\": 0.0723,\n            \"7\": 0.0745,\n            \"8\": 0.0763,\n            \"9\": 0.0779,\n            \"10\": 0.0794\n        }\n    },\n    IRS_FIX: {\n        \"18\": {\n            \"1\": 0.14526,\n            \"2\": 0.13301,\n            \"3\": 0.12981,\n            \"4\": 0.12984,\n            \"5\": 0.12994,\n            \"6\": 0.13005,\n            \"7\": 0.13008,\n            \"8\": 0.13026,\n            \"9\": 0.13034,\n            \"10\": 0.13043\n        }\n    }\n};\n/**\n * Linear interpolation between two points\n */ var linearInterpolate = function(x1, y1, x2, y2, x) {\n    return y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n};\n/**\n * Get premium for a specific instrument, strike and term with interpolation support\n * Supports interpolation both by term and by strike\n */ var getInstrumentPremium = function(instrumentType, strike, termYears) {\n    var instrument = MARKET_QUOTES[instrumentType];\n    if (!instrument) return null;\n    // Try exact strike match first\n    var exactStrikeData = instrument[strike.toString()];\n    if (exactStrikeData) {\n        return getTermPremium(exactStrikeData, termYears, instrumentType, strike);\n    }\n    // If no exact strike match, try strike interpolation\n    var availableStrikes = Object.keys(instrument).map(function(s) {\n        return parseFloat(s);\n    }).sort(function(a, b) {\n        return a - b;\n    });\n    // Find surrounding strikes for interpolation\n    var lowerStrike = null;\n    var upperStrike = null;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = availableStrikes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var availableStrike = _step.value;\n            if (availableStrike < strike) {\n                lowerStrike = availableStrike;\n            } else if (availableStrike > strike && upperStrike === null) {\n                upperStrike = availableStrike;\n                break;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    // If we have both lower and upper strikes, interpolate between them\n    if (lowerStrike !== null && upperStrike !== null) {\n        var lowerStrikeData = instrument[lowerStrike.toString()];\n        var upperStrikeData = instrument[upperStrike.toString()];\n        if (lowerStrikeData && upperStrikeData) {\n            // Get premiums for both strikes at the given term\n            var lowerPremium = getTermPremium(lowerStrikeData, termYears, instrumentType, lowerStrike);\n            var upperPremium = getTermPremium(upperStrikeData, termYears, instrumentType, upperStrike);\n            if (lowerPremium !== null && upperPremium !== null) {\n                var interpolatedPremium = linearInterpolate(lowerStrike, lowerPremium, upperStrike, upperPremium, strike);\n                console.log(\"\\uD83D\\uDCCA Интерполяция по страйкам для \".concat(instrumentType, \" \").concat(strike, \"% \").concat(termYears, \"лет: между \").concat(lowerStrike, \"%(\").concat((lowerPremium * 100).toFixed(2), \"%) и \").concat(upperStrike, \"%(\").concat((upperPremium * 100).toFixed(2), \"%) = \").concat((interpolatedPremium * 100).toFixed(2), \"%\"));\n                return interpolatedPremium;\n            }\n        }\n    }\n    // If only lower strike exists, use that\n    if (lowerStrike !== null && upperStrike === null) {\n        var lowerStrikeData1 = instrument[lowerStrike.toString()];\n        if (lowerStrikeData1) {\n            return getTermPremium(lowerStrikeData1, termYears, instrumentType, lowerStrike);\n        }\n    }\n    // If only upper strike exists, use that\n    if (lowerStrike === null && upperStrike !== null) {\n        var upperStrikeData1 = instrument[upperStrike.toString()];\n        if (upperStrikeData1) {\n            return getTermPremium(upperStrikeData1, termYears, instrumentType, upperStrike);\n        }\n    }\n    return null;\n};\n/**\n * Get premium for a specific term with term interpolation\n */ var getTermPremium = function(strikeData, termYears, instrumentType, strike) {\n    // Try to get exact match first\n    var exactPremium = strikeData[termYears.toString()];\n    if (exactPremium !== undefined) {\n        return exactPremium;\n    }\n    // If no exact match, try term interpolation\n    var availableTerms = Object.keys(strikeData).map(function(term) {\n        return parseInt(term);\n    }).sort(function(a, b) {\n        return a - b;\n    });\n    // Find surrounding terms for interpolation\n    var lowerTerm = null;\n    var upperTerm = null;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = availableTerms[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var term = _step.value;\n            if (term < termYears) {\n                lowerTerm = term;\n            } else if (term > termYears && upperTerm === null) {\n                upperTerm = term;\n                break;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    // If we have both lower and upper bounds, interpolate\n    if (lowerTerm !== null && upperTerm !== null) {\n        var lowerPremium = strikeData[lowerTerm.toString()];\n        var upperPremium = strikeData[upperTerm.toString()];\n        if (lowerPremium !== undefined && upperPremium !== undefined) {\n            var interpolatedPremium = linearInterpolate(lowerTerm, lowerPremium, upperTerm, upperPremium, termYears);\n            console.log(\"\\uD83D\\uDCCA Интерполяция по срокам для \".concat(instrumentType, \" \").concat(strike, \"% \").concat(termYears, \"лет: между \").concat(lowerTerm, \"лет(\").concat((lowerPremium * 100).toFixed(2), \"%) и \").concat(upperTerm, \"лет(\").concat((upperPremium * 100).toFixed(2), \"%) = \").concat((interpolatedPremium * 100).toFixed(2), \"%\"));\n            return interpolatedPremium;\n        }\n    }\n    // If only lower bound exists, use that (extrapolation down)\n    if (lowerTerm !== null && upperTerm === null) {\n        var lowerPremium1 = strikeData[lowerTerm.toString()];\n        if (lowerPremium1 !== undefined) {\n            console.log(\"\\uD83D\\uDCCA Используем ближайший нижний срок для \".concat(instrumentType, \" \").concat(strike, \"% \").concat(termYears, \"лет: \").concat(lowerTerm, \"лет = \").concat((lowerPremium1 * 100).toFixed(2), \"%\"));\n            return lowerPremium1;\n        }\n    }\n    // If only upper bound exists, use that (extrapolation up)\n    if (lowerTerm === null && upperTerm !== null) {\n        var upperPremium1 = strikeData[upperTerm.toString()];\n        if (upperPremium1 !== undefined) {\n            console.log(\"\\uD83D\\uDCCA Используем ближайший верхний срок для \".concat(instrumentType, \" \").concat(strike, \"% \").concat(termYears, \"лет: \").concat(upperTerm, \"лет = \").concat((upperPremium1 * 100).toFixed(2), \"%\"));\n            return upperPremium1;\n        }\n    }\n    return null;\n};\n/**\n * Get available strikes for an instrument\n */ var getAvailableStrikes = function(instrumentType) {\n    var instrument = MARKET_QUOTES[instrumentType];\n    if (!instrument) return [];\n    return Object.keys(instrument).map(function(strike) {\n        return parseInt(strike);\n    }).sort(function(a, b) {\n        return a - b;\n    });\n};\n/**\n * Get available terms for an instrument and strike\n */ var getAvailableTerms = function(instrumentType, strike) {\n    var instrument = MARKET_QUOTES[instrumentType];\n    if (!instrument) return [];\n    var strikeData = instrument[strike.toString()];\n    if (!strikeData) return [];\n    return Object.keys(strikeData).map(function(term) {\n        return parseInt(term);\n    }).sort(function(a, b) {\n        return a - b;\n    });\n};\n/**\n * Format premium as percentage string\n */ var formatPremium = function(premium) {\n    return \"\".concat((premium * 100).toFixed(2), \"%\");\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/types/quotes.ts\n"));

/***/ })

});